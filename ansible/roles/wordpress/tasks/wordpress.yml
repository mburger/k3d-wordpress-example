---
- name: create volume claim
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: wp-pv-claim
        namespace: web
        labels:
          app.kubernetes.io/name: wordpress
          app.kubernetes.io/instance: wordpress
          app.kubernetes.io/version: "{{ wordpress_version }}"
          app.kubernetes.io/managed-by: ansible
          app.kubernetes.io/component: server
          app.kubernetes.io/part-of: wordpress
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

- name: create service
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: wordpress
        namespace: web
        labels:
          app.kubernetes.io/name: wordpress
          app.kubernetes.io/instance: wordpress
          app.kubernetes.io/version: "{{ wordpress_version }}"
          app.kubernetes.io/managed-by: ansible
          app.kubernetes.io/component: server
          app.kubernetes.io/part-of: wordpress
      spec:
        ports:
          - port: 80
        selector:
          app.kubernetes.io/name: wordpress
          app.kubernetes.io/part-of: wordpress
        type: LoadBalancer

- name: create deployment
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: wordpress
        namespace: web
        labels:
          app.kubernetes.io/name: wordpress
          app.kubernetes.io/instance: wordpress
          app.kubernetes.io/version: "{{ wordpress_version }}"
          app.kubernetes.io/managed-by: ansible
          app.kubernetes.io/component: server
          app.kubernetes.io/part-of: wordpress
      spec:
        selector:
          matchLabels:
            app.kubernetes.io/name: wordpress
            app.kubernetes.io/part-of: wordpress
        strategy:
          type: Recreate
        template:
          metadata:
            labels:
              app.kubernetes.io/name: wordpress
              app.kubernetes.io/instance: wordpress
              app.kubernetes.io/version: "{{ wordpress_version }}"
              app.kubernetes.io/managed-by: ansible
              app.kubernetes.io/component: server
              app.kubernetes.io/part-of: wordpress
          spec:
            containers:
            - image: "wordpress:{{ wordpress_version }}"
              name: wordpress
              env:
              - name: WORDPRESS_DB_HOST
                value: mysql.databases.svc.cluster.local
              - name: WORDPRESS_DB_PASSWORD
                value: wordpress
              - name: WORDPRESS_DB_USER
                value: root
              - name: WORDPRESS_DB_NAME
                value: wordpress
              ports:
              - containerPort: 80
                name: wordpress
              volumeMounts:
              - name: wordpress-persistent-storage
                mountPath: /var/www/html
            volumes:
            - name: wordpress-persistent-storage
              persistentVolumeClaim:
                claimName: wp-pv-claim

- name: create ingress
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: wordpress-ingress
        namespace: web
        labels:
          app.kubernetes.io/name: wordpress
          app.kubernetes.io/instance: wordpress
          app.kubernetes.io/version: "{{ wordpress_version }}"
          app.kubernetes.io/managed-by: ansible
          app.kubernetes.io/component: server
          app.kubernetes.io/part-of: wordpress
      spec:
        rules:
          - host: wordpress.tset.localho.st
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: wordpress
                      port:
                        number: 80
