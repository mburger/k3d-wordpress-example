---
- name: create volume claim
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: mysql-pv-claim
        namespace: databases
        labels:
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: mysql
          app.kubernetes.io/version: "6.1"
          app.kubernetes.io/managed-by: ansible
          app.kubernetes.io/component: server
          app.kubernetes.io/part-of: wordpress
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

- name: create service
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: mysql
        namespace: databases
        labels:
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: wordpress
          app.kubernetes.io/version: "6.1"
          app.kubernetes.io/managed-by: ansible
          app.kubernetes.io/component: server
          app.kubernetes.io/part-of: wordpress
      spec:
        ports:
          - port: 3306
        selector:
          app.kubernetes.io/name: mysql
          app.kubernetes.io/part-of: wordpress

- name: create deployment
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: mysql
        namespace: databases
        labels:
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: mysql
          app.kubernetes.io/version: "6.1"
          app.kubernetes.io/managed-by: ansible
          app.kubernetes.io/component: server
          app.kubernetes.io/part-of: wordpress
      spec:
        selector:
          matchLabels:
            app.kubernetes.io/name: mysql
            app.kubernetes.io/part-of: wordpress
        strategy:
          type: Recreate
        template:
          metadata:
            labels:
              app.kubernetes.io/name: mysql
              app.kubernetes.io/instance: mysql
              app.kubernetes.io/version: "6.1"
              app.kubernetes.io/managed-by: ansible
              app.kubernetes.io/component: server
              app.kubernetes.io/part-of: wordpress
          spec:
            containers:
            - image: mysql:8
              name: mysql
              env:
              - name: MYSQL_ROOT_PASSWORD
                value: wordpress
              - name: MYSQL_DATABASE
                value: wordpress
              ports:
              - containerPort: 3306
                name: mysql
              volumeMounts:
              - name: mysql-persistent-storage
                mountPath: /var/lib/mysql
            volumes:
            - name: mysql-persistent-storage
              persistentVolumeClaim:
                claimName: mysql-pv-claim
